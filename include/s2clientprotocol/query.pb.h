// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2clientprotocol/query.proto

#ifndef PROTOBUF_s2clientprotocol_2fquery_2eproto__INCLUDED
#define PROTOBUF_s2clientprotocol_2fquery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2007000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "s2clientprotocol/common.pb.h"
#include "s2clientprotocol/error.pb.h"
// @@protoc_insertion_point(includes)

namespace SC2APIProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

class RequestQuery;
class RequestQueryAvailableAbilities;
class RequestQueryBuildingPlacement;
class RequestQueryPathing;
class ResponseQuery;
class ResponseQueryAvailableAbilities;
class ResponseQueryBuildingPlacement;
class ResponseQueryPathing;

// ===================================================================

class RequestQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.RequestQuery) */ {
 public:
  RequestQuery();
  virtual ~RequestQuery();

  RequestQuery(const RequestQuery& from);

  inline RequestQuery& operator=(const RequestQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestQuery& default_instance();

  void Swap(RequestQuery* other);

  // implements Message ----------------------------------------------

  inline RequestQuery* New() const { return New(NULL); }

  RequestQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestQuery& from);
  void MergeFrom(const RequestQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SC2APIProtocol.RequestQueryPathing pathing = 1;
  int pathing_size() const;
  void clear_pathing();
  static const int kPathingFieldNumber = 1;
  const ::SC2APIProtocol::RequestQueryPathing& pathing(int index) const;
  ::SC2APIProtocol::RequestQueryPathing* mutable_pathing(int index);
  ::SC2APIProtocol::RequestQueryPathing* add_pathing();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryPathing >*
      mutable_pathing();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryPathing >&
      pathing() const;

  // repeated .SC2APIProtocol.RequestQueryAvailableAbilities abilities = 2;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 2;
  const ::SC2APIProtocol::RequestQueryAvailableAbilities& abilities(int index) const;
  ::SC2APIProtocol::RequestQueryAvailableAbilities* mutable_abilities(int index);
  ::SC2APIProtocol::RequestQueryAvailableAbilities* add_abilities();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryAvailableAbilities >*
      mutable_abilities();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryAvailableAbilities >&
      abilities() const;

  // repeated .SC2APIProtocol.RequestQueryBuildingPlacement placements = 3;
  int placements_size() const;
  void clear_placements();
  static const int kPlacementsFieldNumber = 3;
  const ::SC2APIProtocol::RequestQueryBuildingPlacement& placements(int index) const;
  ::SC2APIProtocol::RequestQueryBuildingPlacement* mutable_placements(int index);
  ::SC2APIProtocol::RequestQueryBuildingPlacement* add_placements();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryBuildingPlacement >*
      mutable_placements();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryBuildingPlacement >&
      placements() const;

  // optional bool ignore_resource_requirements = 4;
  bool has_ignore_resource_requirements() const;
  void clear_ignore_resource_requirements();
  static const int kIgnoreResourceRequirementsFieldNumber = 4;
  bool ignore_resource_requirements() const;
  void set_ignore_resource_requirements(bool value);

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.RequestQuery)
 private:
  inline void set_has_ignore_resource_requirements();
  inline void clear_has_ignore_resource_requirements();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryPathing > pathing_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryAvailableAbilities > abilities_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryBuildingPlacement > placements_;
  bool ignore_resource_requirements_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static RequestQuery* default_instance_;
};
// -------------------------------------------------------------------

class ResponseQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.ResponseQuery) */ {
 public:
  ResponseQuery();
  virtual ~ResponseQuery();

  ResponseQuery(const ResponseQuery& from);

  inline ResponseQuery& operator=(const ResponseQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseQuery& default_instance();

  void Swap(ResponseQuery* other);

  // implements Message ----------------------------------------------

  inline ResponseQuery* New() const { return New(NULL); }

  ResponseQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseQuery& from);
  void MergeFrom(const ResponseQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SC2APIProtocol.ResponseQueryPathing pathing = 1;
  int pathing_size() const;
  void clear_pathing();
  static const int kPathingFieldNumber = 1;
  const ::SC2APIProtocol::ResponseQueryPathing& pathing(int index) const;
  ::SC2APIProtocol::ResponseQueryPathing* mutable_pathing(int index);
  ::SC2APIProtocol::ResponseQueryPathing* add_pathing();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryPathing >*
      mutable_pathing();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryPathing >&
      pathing() const;

  // repeated .SC2APIProtocol.ResponseQueryAvailableAbilities abilities = 2;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 2;
  const ::SC2APIProtocol::ResponseQueryAvailableAbilities& abilities(int index) const;
  ::SC2APIProtocol::ResponseQueryAvailableAbilities* mutable_abilities(int index);
  ::SC2APIProtocol::ResponseQueryAvailableAbilities* add_abilities();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryAvailableAbilities >*
      mutable_abilities();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryAvailableAbilities >&
      abilities() const;

  // repeated .SC2APIProtocol.ResponseQueryBuildingPlacement placements = 3;
  int placements_size() const;
  void clear_placements();
  static const int kPlacementsFieldNumber = 3;
  const ::SC2APIProtocol::ResponseQueryBuildingPlacement& placements(int index) const;
  ::SC2APIProtocol::ResponseQueryBuildingPlacement* mutable_placements(int index);
  ::SC2APIProtocol::ResponseQueryBuildingPlacement* add_placements();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryBuildingPlacement >*
      mutable_placements();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryBuildingPlacement >&
      placements() const;

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.ResponseQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryPathing > pathing_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryAvailableAbilities > abilities_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryBuildingPlacement > placements_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static ResponseQuery* default_instance_;
};
// -------------------------------------------------------------------

class RequestQueryPathing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.RequestQueryPathing) */ {
 public:
  RequestQueryPathing();
  virtual ~RequestQueryPathing();

  RequestQueryPathing(const RequestQueryPathing& from);

  inline RequestQueryPathing& operator=(const RequestQueryPathing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestQueryPathing& default_instance();

  enum StartCase {
    kStartPos = 1,
    kUnitTag = 2,
    START_NOT_SET = 0,
  };

  void Swap(RequestQueryPathing* other);

  // implements Message ----------------------------------------------

  inline RequestQueryPathing* New() const { return New(NULL); }

  RequestQueryPathing* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestQueryPathing& from);
  void MergeFrom(const RequestQueryPathing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestQueryPathing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SC2APIProtocol.Point2D start_pos = 1;
  bool has_start_pos() const;
  void clear_start_pos();
  static const int kStartPosFieldNumber = 1;
  const ::SC2APIProtocol::Point2D& start_pos() const;
  ::SC2APIProtocol::Point2D* mutable_start_pos();
  ::SC2APIProtocol::Point2D* release_start_pos();
  void set_allocated_start_pos(::SC2APIProtocol::Point2D* start_pos);

  // optional uint64 unit_tag = 2;
  bool has_unit_tag() const;
  void clear_unit_tag();
  static const int kUnitTagFieldNumber = 2;
  ::google::protobuf::uint64 unit_tag() const;
  void set_unit_tag(::google::protobuf::uint64 value);

  // optional .SC2APIProtocol.Point2D end_pos = 3;
  bool has_end_pos() const;
  void clear_end_pos();
  static const int kEndPosFieldNumber = 3;
  const ::SC2APIProtocol::Point2D& end_pos() const;
  ::SC2APIProtocol::Point2D* mutable_end_pos();
  ::SC2APIProtocol::Point2D* release_end_pos();
  void set_allocated_end_pos(::SC2APIProtocol::Point2D* end_pos);

  StartCase start_case() const;
  // @@protoc_insertion_point(class_scope:SC2APIProtocol.RequestQueryPathing)
 private:
  inline void set_has_start_pos();
  inline void set_has_unit_tag();
  inline void set_has_end_pos();
  inline void clear_has_end_pos();

  inline bool has_start() const;
  void clear_start();
  inline void clear_has_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SC2APIProtocol::Point2D* end_pos_;
  union StartUnion {
    StartUnion() {}
    ::SC2APIProtocol::Point2D* start_pos_;
    ::google::protobuf::uint64 unit_tag_;
  } start_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static RequestQueryPathing* default_instance_;
};
// -------------------------------------------------------------------

class ResponseQueryPathing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.ResponseQueryPathing) */ {
 public:
  ResponseQueryPathing();
  virtual ~ResponseQueryPathing();

  ResponseQueryPathing(const ResponseQueryPathing& from);

  inline ResponseQueryPathing& operator=(const ResponseQueryPathing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseQueryPathing& default_instance();

  void Swap(ResponseQueryPathing* other);

  // implements Message ----------------------------------------------

  inline ResponseQueryPathing* New() const { return New(NULL); }

  ResponseQueryPathing* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseQueryPathing& from);
  void MergeFrom(const ResponseQueryPathing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseQueryPathing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float distance = 1;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 1;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.ResponseQueryPathing)
 private:
  inline void set_has_distance();
  inline void clear_has_distance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float distance_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static ResponseQueryPathing* default_instance_;
};
// -------------------------------------------------------------------

class RequestQueryAvailableAbilities : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.RequestQueryAvailableAbilities) */ {
 public:
  RequestQueryAvailableAbilities();
  virtual ~RequestQueryAvailableAbilities();

  RequestQueryAvailableAbilities(const RequestQueryAvailableAbilities& from);

  inline RequestQueryAvailableAbilities& operator=(const RequestQueryAvailableAbilities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestQueryAvailableAbilities& default_instance();

  void Swap(RequestQueryAvailableAbilities* other);

  // implements Message ----------------------------------------------

  inline RequestQueryAvailableAbilities* New() const { return New(NULL); }

  RequestQueryAvailableAbilities* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestQueryAvailableAbilities& from);
  void MergeFrom(const RequestQueryAvailableAbilities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestQueryAvailableAbilities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 unit_tag = 1;
  bool has_unit_tag() const;
  void clear_unit_tag();
  static const int kUnitTagFieldNumber = 1;
  ::google::protobuf::uint64 unit_tag() const;
  void set_unit_tag(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.RequestQueryAvailableAbilities)
 private:
  inline void set_has_unit_tag();
  inline void clear_has_unit_tag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 unit_tag_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static RequestQueryAvailableAbilities* default_instance_;
};
// -------------------------------------------------------------------

class ResponseQueryAvailableAbilities : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.ResponseQueryAvailableAbilities) */ {
 public:
  ResponseQueryAvailableAbilities();
  virtual ~ResponseQueryAvailableAbilities();

  ResponseQueryAvailableAbilities(const ResponseQueryAvailableAbilities& from);

  inline ResponseQueryAvailableAbilities& operator=(const ResponseQueryAvailableAbilities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseQueryAvailableAbilities& default_instance();

  void Swap(ResponseQueryAvailableAbilities* other);

  // implements Message ----------------------------------------------

  inline ResponseQueryAvailableAbilities* New() const { return New(NULL); }

  ResponseQueryAvailableAbilities* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseQueryAvailableAbilities& from);
  void MergeFrom(const ResponseQueryAvailableAbilities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseQueryAvailableAbilities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SC2APIProtocol.AvailableAbility abilities = 1;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 1;
  const ::SC2APIProtocol::AvailableAbility& abilities(int index) const;
  ::SC2APIProtocol::AvailableAbility* mutable_abilities(int index);
  ::SC2APIProtocol::AvailableAbility* add_abilities();
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::AvailableAbility >*
      mutable_abilities();
  const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::AvailableAbility >&
      abilities() const;

  // optional uint64 unit_tag = 2;
  bool has_unit_tag() const;
  void clear_unit_tag();
  static const int kUnitTagFieldNumber = 2;
  ::google::protobuf::uint64 unit_tag() const;
  void set_unit_tag(::google::protobuf::uint64 value);

  // optional uint32 unit_type_id = 3;
  bool has_unit_type_id() const;
  void clear_unit_type_id();
  static const int kUnitTypeIdFieldNumber = 3;
  ::google::protobuf::uint32 unit_type_id() const;
  void set_unit_type_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.ResponseQueryAvailableAbilities)
 private:
  inline void set_has_unit_tag();
  inline void clear_has_unit_tag();
  inline void set_has_unit_type_id();
  inline void clear_has_unit_type_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::AvailableAbility > abilities_;
  ::google::protobuf::uint64 unit_tag_;
  ::google::protobuf::uint32 unit_type_id_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static ResponseQueryAvailableAbilities* default_instance_;
};
// -------------------------------------------------------------------

class RequestQueryBuildingPlacement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.RequestQueryBuildingPlacement) */ {
 public:
  RequestQueryBuildingPlacement();
  virtual ~RequestQueryBuildingPlacement();

  RequestQueryBuildingPlacement(const RequestQueryBuildingPlacement& from);

  inline RequestQueryBuildingPlacement& operator=(const RequestQueryBuildingPlacement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestQueryBuildingPlacement& default_instance();

  void Swap(RequestQueryBuildingPlacement* other);

  // implements Message ----------------------------------------------

  inline RequestQueryBuildingPlacement* New() const { return New(NULL); }

  RequestQueryBuildingPlacement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestQueryBuildingPlacement& from);
  void MergeFrom(const RequestQueryBuildingPlacement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestQueryBuildingPlacement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ability_id = 1;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 1;
  ::google::protobuf::int32 ability_id() const;
  void set_ability_id(::google::protobuf::int32 value);

  // optional .SC2APIProtocol.Point2D target_pos = 2;
  bool has_target_pos() const;
  void clear_target_pos();
  static const int kTargetPosFieldNumber = 2;
  const ::SC2APIProtocol::Point2D& target_pos() const;
  ::SC2APIProtocol::Point2D* mutable_target_pos();
  ::SC2APIProtocol::Point2D* release_target_pos();
  void set_allocated_target_pos(::SC2APIProtocol::Point2D* target_pos);

  // optional uint64 placing_unit_tag = 3;
  bool has_placing_unit_tag() const;
  void clear_placing_unit_tag();
  static const int kPlacingUnitTagFieldNumber = 3;
  ::google::protobuf::uint64 placing_unit_tag() const;
  void set_placing_unit_tag(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.RequestQueryBuildingPlacement)
 private:
  inline void set_has_ability_id();
  inline void clear_has_ability_id();
  inline void set_has_target_pos();
  inline void clear_has_target_pos();
  inline void set_has_placing_unit_tag();
  inline void clear_has_placing_unit_tag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SC2APIProtocol::Point2D* target_pos_;
  ::google::protobuf::uint64 placing_unit_tag_;
  ::google::protobuf::int32 ability_id_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static RequestQueryBuildingPlacement* default_instance_;
};
// -------------------------------------------------------------------

class ResponseQueryBuildingPlacement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC2APIProtocol.ResponseQueryBuildingPlacement) */ {
 public:
  ResponseQueryBuildingPlacement();
  virtual ~ResponseQueryBuildingPlacement();

  ResponseQueryBuildingPlacement(const ResponseQueryBuildingPlacement& from);

  inline ResponseQueryBuildingPlacement& operator=(const ResponseQueryBuildingPlacement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseQueryBuildingPlacement& default_instance();

  void Swap(ResponseQueryBuildingPlacement* other);

  // implements Message ----------------------------------------------

  inline ResponseQueryBuildingPlacement* New() const { return New(NULL); }

  ResponseQueryBuildingPlacement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseQueryBuildingPlacement& from);
  void MergeFrom(const ResponseQueryBuildingPlacement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseQueryBuildingPlacement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SC2APIProtocol.ActionResult result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::SC2APIProtocol::ActionResult result() const;
  void set_result(::SC2APIProtocol::ActionResult value);

  // @@protoc_insertion_point(class_scope:SC2APIProtocol.ResponseQueryBuildingPlacement)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_AssignDesc_s2clientprotocol_2fquery_2eproto();
  friend void protobuf_ShutdownFile_s2clientprotocol_2fquery_2eproto();

  void InitAsDefaultInstance();
  static ResponseQueryBuildingPlacement* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestQuery

// repeated .SC2APIProtocol.RequestQueryPathing pathing = 1;
inline int RequestQuery::pathing_size() const {
  return pathing_.size();
}
inline void RequestQuery::clear_pathing() {
  pathing_.Clear();
}
inline const ::SC2APIProtocol::RequestQueryPathing& RequestQuery::pathing(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQuery.pathing)
  return pathing_.Get(index);
}
inline ::SC2APIProtocol::RequestQueryPathing* RequestQuery::mutable_pathing(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.RequestQuery.pathing)
  return pathing_.Mutable(index);
}
inline ::SC2APIProtocol::RequestQueryPathing* RequestQuery::add_pathing() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.RequestQuery.pathing)
  return pathing_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryPathing >*
RequestQuery::mutable_pathing() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.RequestQuery.pathing)
  return &pathing_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryPathing >&
RequestQuery::pathing() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.RequestQuery.pathing)
  return pathing_;
}

// repeated .SC2APIProtocol.RequestQueryAvailableAbilities abilities = 2;
inline int RequestQuery::abilities_size() const {
  return abilities_.size();
}
inline void RequestQuery::clear_abilities() {
  abilities_.Clear();
}
inline const ::SC2APIProtocol::RequestQueryAvailableAbilities& RequestQuery::abilities(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQuery.abilities)
  return abilities_.Get(index);
}
inline ::SC2APIProtocol::RequestQueryAvailableAbilities* RequestQuery::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.RequestQuery.abilities)
  return abilities_.Mutable(index);
}
inline ::SC2APIProtocol::RequestQueryAvailableAbilities* RequestQuery::add_abilities() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.RequestQuery.abilities)
  return abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryAvailableAbilities >*
RequestQuery::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.RequestQuery.abilities)
  return &abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryAvailableAbilities >&
RequestQuery::abilities() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.RequestQuery.abilities)
  return abilities_;
}

// repeated .SC2APIProtocol.RequestQueryBuildingPlacement placements = 3;
inline int RequestQuery::placements_size() const {
  return placements_.size();
}
inline void RequestQuery::clear_placements() {
  placements_.Clear();
}
inline const ::SC2APIProtocol::RequestQueryBuildingPlacement& RequestQuery::placements(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQuery.placements)
  return placements_.Get(index);
}
inline ::SC2APIProtocol::RequestQueryBuildingPlacement* RequestQuery::mutable_placements(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.RequestQuery.placements)
  return placements_.Mutable(index);
}
inline ::SC2APIProtocol::RequestQueryBuildingPlacement* RequestQuery::add_placements() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.RequestQuery.placements)
  return placements_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryBuildingPlacement >*
RequestQuery::mutable_placements() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.RequestQuery.placements)
  return &placements_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::RequestQueryBuildingPlacement >&
RequestQuery::placements() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.RequestQuery.placements)
  return placements_;
}

// optional bool ignore_resource_requirements = 4;
inline bool RequestQuery::has_ignore_resource_requirements() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestQuery::set_has_ignore_resource_requirements() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestQuery::clear_has_ignore_resource_requirements() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestQuery::clear_ignore_resource_requirements() {
  ignore_resource_requirements_ = false;
  clear_has_ignore_resource_requirements();
}
inline bool RequestQuery::ignore_resource_requirements() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQuery.ignore_resource_requirements)
  return ignore_resource_requirements_;
}
inline void RequestQuery::set_ignore_resource_requirements(bool value) {
  set_has_ignore_resource_requirements();
  ignore_resource_requirements_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.RequestQuery.ignore_resource_requirements)
}

// -------------------------------------------------------------------

// ResponseQuery

// repeated .SC2APIProtocol.ResponseQueryPathing pathing = 1;
inline int ResponseQuery::pathing_size() const {
  return pathing_.size();
}
inline void ResponseQuery::clear_pathing() {
  pathing_.Clear();
}
inline const ::SC2APIProtocol::ResponseQueryPathing& ResponseQuery::pathing(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQuery.pathing)
  return pathing_.Get(index);
}
inline ::SC2APIProtocol::ResponseQueryPathing* ResponseQuery::mutable_pathing(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.ResponseQuery.pathing)
  return pathing_.Mutable(index);
}
inline ::SC2APIProtocol::ResponseQueryPathing* ResponseQuery::add_pathing() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.ResponseQuery.pathing)
  return pathing_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryPathing >*
ResponseQuery::mutable_pathing() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.ResponseQuery.pathing)
  return &pathing_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryPathing >&
ResponseQuery::pathing() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.ResponseQuery.pathing)
  return pathing_;
}

// repeated .SC2APIProtocol.ResponseQueryAvailableAbilities abilities = 2;
inline int ResponseQuery::abilities_size() const {
  return abilities_.size();
}
inline void ResponseQuery::clear_abilities() {
  abilities_.Clear();
}
inline const ::SC2APIProtocol::ResponseQueryAvailableAbilities& ResponseQuery::abilities(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQuery.abilities)
  return abilities_.Get(index);
}
inline ::SC2APIProtocol::ResponseQueryAvailableAbilities* ResponseQuery::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.ResponseQuery.abilities)
  return abilities_.Mutable(index);
}
inline ::SC2APIProtocol::ResponseQueryAvailableAbilities* ResponseQuery::add_abilities() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.ResponseQuery.abilities)
  return abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryAvailableAbilities >*
ResponseQuery::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.ResponseQuery.abilities)
  return &abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryAvailableAbilities >&
ResponseQuery::abilities() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.ResponseQuery.abilities)
  return abilities_;
}

// repeated .SC2APIProtocol.ResponseQueryBuildingPlacement placements = 3;
inline int ResponseQuery::placements_size() const {
  return placements_.size();
}
inline void ResponseQuery::clear_placements() {
  placements_.Clear();
}
inline const ::SC2APIProtocol::ResponseQueryBuildingPlacement& ResponseQuery::placements(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQuery.placements)
  return placements_.Get(index);
}
inline ::SC2APIProtocol::ResponseQueryBuildingPlacement* ResponseQuery::mutable_placements(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.ResponseQuery.placements)
  return placements_.Mutable(index);
}
inline ::SC2APIProtocol::ResponseQueryBuildingPlacement* ResponseQuery::add_placements() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.ResponseQuery.placements)
  return placements_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryBuildingPlacement >*
ResponseQuery::mutable_placements() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.ResponseQuery.placements)
  return &placements_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::ResponseQueryBuildingPlacement >&
ResponseQuery::placements() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.ResponseQuery.placements)
  return placements_;
}

// -------------------------------------------------------------------

// RequestQueryPathing

// optional .SC2APIProtocol.Point2D start_pos = 1;
inline bool RequestQueryPathing::has_start_pos() const {
  return start_case() == kStartPos;
}
inline void RequestQueryPathing::set_has_start_pos() {
  _oneof_case_[0] = kStartPos;
}
inline void RequestQueryPathing::clear_start_pos() {
  if (has_start_pos()) {
    delete start_.start_pos_;
    clear_has_start();
  }
}
inline  const ::SC2APIProtocol::Point2D& RequestQueryPathing::start_pos() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryPathing.start_pos)
  return has_start_pos()
      ? *start_.start_pos_
      : ::SC2APIProtocol::Point2D::default_instance();
}
inline ::SC2APIProtocol::Point2D* RequestQueryPathing::mutable_start_pos() {
  if (!has_start_pos()) {
    clear_start();
    set_has_start_pos();
    start_.start_pos_ = new ::SC2APIProtocol::Point2D;
  }
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.RequestQueryPathing.start_pos)
  return start_.start_pos_;
}
inline ::SC2APIProtocol::Point2D* RequestQueryPathing::release_start_pos() {
  // @@protoc_insertion_point(field_release:SC2APIProtocol.RequestQueryPathing.start_pos)
  if (has_start_pos()) {
    clear_has_start();
    ::SC2APIProtocol::Point2D* temp = start_.start_pos_;
    start_.start_pos_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RequestQueryPathing::set_allocated_start_pos(::SC2APIProtocol::Point2D* start_pos) {
  clear_start();
  if (start_pos) {
    set_has_start_pos();
    start_.start_pos_ = start_pos;
  }
  // @@protoc_insertion_point(field_set_allocated:SC2APIProtocol.RequestQueryPathing.start_pos)
}

// optional uint64 unit_tag = 2;
inline bool RequestQueryPathing::has_unit_tag() const {
  return start_case() == kUnitTag;
}
inline void RequestQueryPathing::set_has_unit_tag() {
  _oneof_case_[0] = kUnitTag;
}
inline void RequestQueryPathing::clear_unit_tag() {
  if (has_unit_tag()) {
    start_.unit_tag_ = GOOGLE_ULONGLONG(0);
    clear_has_start();
  }
}
inline ::google::protobuf::uint64 RequestQueryPathing::unit_tag() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryPathing.unit_tag)
  if (has_unit_tag()) {
    return start_.unit_tag_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void RequestQueryPathing::set_unit_tag(::google::protobuf::uint64 value) {
  if (!has_unit_tag()) {
    clear_start();
    set_has_unit_tag();
  }
  start_.unit_tag_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.RequestQueryPathing.unit_tag)
}

// optional .SC2APIProtocol.Point2D end_pos = 3;
inline bool RequestQueryPathing::has_end_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestQueryPathing::set_has_end_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestQueryPathing::clear_has_end_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestQueryPathing::clear_end_pos() {
  if (end_pos_ != NULL) end_pos_->::SC2APIProtocol::Point2D::Clear();
  clear_has_end_pos();
}
inline const ::SC2APIProtocol::Point2D& RequestQueryPathing::end_pos() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryPathing.end_pos)
  return end_pos_ != NULL ? *end_pos_ : *default_instance_->end_pos_;
}
inline ::SC2APIProtocol::Point2D* RequestQueryPathing::mutable_end_pos() {
  set_has_end_pos();
  if (end_pos_ == NULL) {
    end_pos_ = new ::SC2APIProtocol::Point2D;
  }
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.RequestQueryPathing.end_pos)
  return end_pos_;
}
inline ::SC2APIProtocol::Point2D* RequestQueryPathing::release_end_pos() {
  // @@protoc_insertion_point(field_release:SC2APIProtocol.RequestQueryPathing.end_pos)
  clear_has_end_pos();
  ::SC2APIProtocol::Point2D* temp = end_pos_;
  end_pos_ = NULL;
  return temp;
}
inline void RequestQueryPathing::set_allocated_end_pos(::SC2APIProtocol::Point2D* end_pos) {
  delete end_pos_;
  end_pos_ = end_pos;
  if (end_pos) {
    set_has_end_pos();
  } else {
    clear_has_end_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:SC2APIProtocol.RequestQueryPathing.end_pos)
}

inline bool RequestQueryPathing::has_start() const {
  return start_case() != START_NOT_SET;
}
inline void RequestQueryPathing::clear_has_start() {
  _oneof_case_[0] = START_NOT_SET;
}
inline RequestQueryPathing::StartCase RequestQueryPathing::start_case() const {
  return RequestQueryPathing::StartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ResponseQueryPathing

// optional float distance = 1;
inline bool ResponseQueryPathing::has_distance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseQueryPathing::set_has_distance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseQueryPathing::clear_has_distance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseQueryPathing::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float ResponseQueryPathing::distance() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQueryPathing.distance)
  return distance_;
}
inline void ResponseQueryPathing::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.ResponseQueryPathing.distance)
}

// -------------------------------------------------------------------

// RequestQueryAvailableAbilities

// optional uint64 unit_tag = 1;
inline bool RequestQueryAvailableAbilities::has_unit_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestQueryAvailableAbilities::set_has_unit_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestQueryAvailableAbilities::clear_has_unit_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestQueryAvailableAbilities::clear_unit_tag() {
  unit_tag_ = GOOGLE_ULONGLONG(0);
  clear_has_unit_tag();
}
inline ::google::protobuf::uint64 RequestQueryAvailableAbilities::unit_tag() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryAvailableAbilities.unit_tag)
  return unit_tag_;
}
inline void RequestQueryAvailableAbilities::set_unit_tag(::google::protobuf::uint64 value) {
  set_has_unit_tag();
  unit_tag_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.RequestQueryAvailableAbilities.unit_tag)
}

// -------------------------------------------------------------------

// ResponseQueryAvailableAbilities

// repeated .SC2APIProtocol.AvailableAbility abilities = 1;
inline int ResponseQueryAvailableAbilities::abilities_size() const {
  return abilities_.size();
}
inline void ResponseQueryAvailableAbilities::clear_abilities() {
  abilities_.Clear();
}
inline const ::SC2APIProtocol::AvailableAbility& ResponseQueryAvailableAbilities::abilities(int index) const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQueryAvailableAbilities.abilities)
  return abilities_.Get(index);
}
inline ::SC2APIProtocol::AvailableAbility* ResponseQueryAvailableAbilities::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.ResponseQueryAvailableAbilities.abilities)
  return abilities_.Mutable(index);
}
inline ::SC2APIProtocol::AvailableAbility* ResponseQueryAvailableAbilities::add_abilities() {
  // @@protoc_insertion_point(field_add:SC2APIProtocol.ResponseQueryAvailableAbilities.abilities)
  return abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::AvailableAbility >*
ResponseQueryAvailableAbilities::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:SC2APIProtocol.ResponseQueryAvailableAbilities.abilities)
  return &abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC2APIProtocol::AvailableAbility >&
ResponseQueryAvailableAbilities::abilities() const {
  // @@protoc_insertion_point(field_list:SC2APIProtocol.ResponseQueryAvailableAbilities.abilities)
  return abilities_;
}

// optional uint64 unit_tag = 2;
inline bool ResponseQueryAvailableAbilities::has_unit_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseQueryAvailableAbilities::set_has_unit_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseQueryAvailableAbilities::clear_has_unit_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseQueryAvailableAbilities::clear_unit_tag() {
  unit_tag_ = GOOGLE_ULONGLONG(0);
  clear_has_unit_tag();
}
inline ::google::protobuf::uint64 ResponseQueryAvailableAbilities::unit_tag() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQueryAvailableAbilities.unit_tag)
  return unit_tag_;
}
inline void ResponseQueryAvailableAbilities::set_unit_tag(::google::protobuf::uint64 value) {
  set_has_unit_tag();
  unit_tag_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.ResponseQueryAvailableAbilities.unit_tag)
}

// optional uint32 unit_type_id = 3;
inline bool ResponseQueryAvailableAbilities::has_unit_type_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseQueryAvailableAbilities::set_has_unit_type_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseQueryAvailableAbilities::clear_has_unit_type_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseQueryAvailableAbilities::clear_unit_type_id() {
  unit_type_id_ = 0u;
  clear_has_unit_type_id();
}
inline ::google::protobuf::uint32 ResponseQueryAvailableAbilities::unit_type_id() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQueryAvailableAbilities.unit_type_id)
  return unit_type_id_;
}
inline void ResponseQueryAvailableAbilities::set_unit_type_id(::google::protobuf::uint32 value) {
  set_has_unit_type_id();
  unit_type_id_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.ResponseQueryAvailableAbilities.unit_type_id)
}

// -------------------------------------------------------------------

// RequestQueryBuildingPlacement

// optional int32 ability_id = 1;
inline bool RequestQueryBuildingPlacement::has_ability_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestQueryBuildingPlacement::set_has_ability_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestQueryBuildingPlacement::clear_has_ability_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestQueryBuildingPlacement::clear_ability_id() {
  ability_id_ = 0;
  clear_has_ability_id();
}
inline ::google::protobuf::int32 RequestQueryBuildingPlacement::ability_id() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryBuildingPlacement.ability_id)
  return ability_id_;
}
inline void RequestQueryBuildingPlacement::set_ability_id(::google::protobuf::int32 value) {
  set_has_ability_id();
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.RequestQueryBuildingPlacement.ability_id)
}

// optional .SC2APIProtocol.Point2D target_pos = 2;
inline bool RequestQueryBuildingPlacement::has_target_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestQueryBuildingPlacement::set_has_target_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestQueryBuildingPlacement::clear_has_target_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestQueryBuildingPlacement::clear_target_pos() {
  if (target_pos_ != NULL) target_pos_->::SC2APIProtocol::Point2D::Clear();
  clear_has_target_pos();
}
inline const ::SC2APIProtocol::Point2D& RequestQueryBuildingPlacement::target_pos() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryBuildingPlacement.target_pos)
  return target_pos_ != NULL ? *target_pos_ : *default_instance_->target_pos_;
}
inline ::SC2APIProtocol::Point2D* RequestQueryBuildingPlacement::mutable_target_pos() {
  set_has_target_pos();
  if (target_pos_ == NULL) {
    target_pos_ = new ::SC2APIProtocol::Point2D;
  }
  // @@protoc_insertion_point(field_mutable:SC2APIProtocol.RequestQueryBuildingPlacement.target_pos)
  return target_pos_;
}
inline ::SC2APIProtocol::Point2D* RequestQueryBuildingPlacement::release_target_pos() {
  // @@protoc_insertion_point(field_release:SC2APIProtocol.RequestQueryBuildingPlacement.target_pos)
  clear_has_target_pos();
  ::SC2APIProtocol::Point2D* temp = target_pos_;
  target_pos_ = NULL;
  return temp;
}
inline void RequestQueryBuildingPlacement::set_allocated_target_pos(::SC2APIProtocol::Point2D* target_pos) {
  delete target_pos_;
  target_pos_ = target_pos;
  if (target_pos) {
    set_has_target_pos();
  } else {
    clear_has_target_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:SC2APIProtocol.RequestQueryBuildingPlacement.target_pos)
}

// optional uint64 placing_unit_tag = 3;
inline bool RequestQueryBuildingPlacement::has_placing_unit_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestQueryBuildingPlacement::set_has_placing_unit_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestQueryBuildingPlacement::clear_has_placing_unit_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestQueryBuildingPlacement::clear_placing_unit_tag() {
  placing_unit_tag_ = GOOGLE_ULONGLONG(0);
  clear_has_placing_unit_tag();
}
inline ::google::protobuf::uint64 RequestQueryBuildingPlacement::placing_unit_tag() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.RequestQueryBuildingPlacement.placing_unit_tag)
  return placing_unit_tag_;
}
inline void RequestQueryBuildingPlacement::set_placing_unit_tag(::google::protobuf::uint64 value) {
  set_has_placing_unit_tag();
  placing_unit_tag_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.RequestQueryBuildingPlacement.placing_unit_tag)
}

// -------------------------------------------------------------------

// ResponseQueryBuildingPlacement

// optional .SC2APIProtocol.ActionResult result = 1;
inline bool ResponseQueryBuildingPlacement::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseQueryBuildingPlacement::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseQueryBuildingPlacement::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseQueryBuildingPlacement::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::SC2APIProtocol::ActionResult ResponseQueryBuildingPlacement::result() const {
  // @@protoc_insertion_point(field_get:SC2APIProtocol.ResponseQueryBuildingPlacement.result)
  return static_cast< ::SC2APIProtocol::ActionResult >(result_);
}
inline void ResponseQueryBuildingPlacement::set_result(::SC2APIProtocol::ActionResult value) {
  assert(::SC2APIProtocol::ActionResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC2APIProtocol.ResponseQueryBuildingPlacement.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SC2APIProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_s2clientprotocol_2fquery_2eproto__INCLUDED
